@{
    ViewBag.Title = "Asigancion de comidas";
}
<h2>Asignacion de cantidad de Comidas</h2>
<p>
    @if (@ViewBag.UpdateState == "True")
    {
        <span class="label label-success">Actualizacion correcta</span>}
    else if (@ViewBag.UpdateState == "false")
    {
        <span class="label label-danger">No se ha logrado actualizar</span>}
    else { }
</p>
<hr />
<div ng-app="listApp">
    <div class="row" ng-controller="listDeportistas">
        <div class="col-md-10 col-sm-10">
            <div class="row">
                <h4>Asigancion comidas por Deportista</h4>
                <p>Busqueda de deportistas por...</p>
                <div class="col-md-6">
                    <label class="control-label">Matricula</label>
                    <div class="input-group" style="max-width:280px">
                        <input type="text" class="form-control" placeholder="Ingresa Matricula" ng-model="strMatricula">
                        <span class="input-group-btn">
                            <button class="btn btn-default" type="button" ng-click="searchDeportistaByMatricula(strMatricula)">Buscar</button>
                        </span>
                    </div>
                </div>
                <div class="col-md-6">
                    <label class="control-label">Nombre, apellido, Sexo</label>
                    <div class="input-group" style="max-width:280px">
                        <input type="text" class="form-control" placeholder="Ingresa..." ng-model="strExpression">
                        <span class="input-group-btn">
                            <button class="btn btn-default" type="button" ng-click="searchDeportistaByStringExpression(strExpression)">Buscar</button>
                        </span>
                    </div>
                </div>
                <div class="col-md-6">
                    <label class="control-label">Deporte</label>
                    <div class="input-group" style="max-width:280px">
                        <input type="text" class="form-control" placeholder="Ingresa Deporte" ng-model="strDeporte">
                        <span class="input-group-btn">
                            <button class="btn btn-default" type="button" ng-click="searchDeportistaByDeporteNombre(strDeporte)">Buscar</button>
                        </span>
                    </div>
                </div>
                <div class=" col-md-6">
                    <label class="control-label">Dependencia</label>
                    <div class="input-group" style="max-width:280px">
                        <input type="text" class="form-control" placeholder="Ingresa Dependencia" ng-model="strDependencia">
                        <span class="input-group-btn">
                            <button class="btn btn-default" type="button" ng-click="searchDeportistaByDependenciaNombre(strDependencia)">Buscar</button>
                        </span>
                    </div>
                </div>
            </div>
            <br />
            <div class="panel panel-default">
                <div class="panel-heading">
                    Deportistas
                </div>
                <div class="panel-body">
                    Selecciona el deportista a cambiar
                </div>
                <div class="table-responsive">
                    <table class="table table-striped table-hover table-condensed">
                        <thead>
                            <tr>
                                <th>&ensp;#</th>
                                <th>Matricula</th>
                                <th>Nombre</th>
                                <th>Cantidad</th>
                                <th></th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr ng-repeat="x in tempItems">
                                <th scope="row">&ensp;{{$index+1}}</th>
                                <td>{{ x.Matricula }}</td>
                                <td>{{ x.Nombre }}</td>
                                <td>{{ x.Cantidad }}</td>
                                <td><a href="#" ng-click="editItem('@Url.Action("UpdateCantidadComidasDeportista")',x.Nombre,x.DeportistaId)"><span class="glyphicon glyphicon-edit"></span></a></td>
                            </tr>
                            <tr ng-show="!tempItems.length">
                                <td></td>
                                <th colspan="3">No hay ningun deportista</th>
                            </tr>
                        </tbody>
                    </table>
                    <div ng-hide="isHide">
                        <ul class="pagination pull-right">
                            <li ng-click="changePage(pages[0])">
                                <a href="#">
                                    <span>Primera</span>
                                </a>
                            </li>
                            <li ng-click="changePage(currentPage - 1)">
                                <a href="#">
                                    <span><<</span>
                                </a>
                            </li>
                            <li ng-repeat="x in tempPages" ng-click="changePage(x)" ng-class="{active: x == currentPage}">
                                <a href="#">
                                    <span>{{x}}</span>
                                </a>
                            </li>
                            <li ng-click="changePage(currentPage + 1)">
                                <a href="#">
                                    <span>>></span>
                                </a>
                            </li>
                            <li ng-click="changePage(pages[pages.length - 1])">
                                <a href="#">
                                    <span>Ultima</span>
                                </a>
                            </li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <br />
    <div class="row" ng-controller="listDeportes">
        <div class="col-md-10 col-sm-10">
            <h4>Asignacion grupal de comidas por Deporte</h4>
            <hr />
            <p>Nombre del Deporte</p>
            <div class="input-group" style="max-width:280px">
                <input type="text" class="form-control" placeholder="Buscar Deporte" ng-model="strDeporte">
                <span class="input-group-btn">
                    <button class="btn btn-default" type="button" ng-click="searchDeporteByName(strDeporte)">Buscar</button>
                </span>
            </div>
            <br />
            <div class="panel panel-default">
                <div class="panel-heading">
                    Deportes
                </div>
                <div class="panel-body">
                    Selecciona un deporte
                </div>
                <div class="table-responsive">
                    <table class="table table-striped table-hover table-condensed">
                        <thead>
                            <tr>
                                <th>&ensp;#</th>
                                <th>Nombre</th>
                                <th>Cantidad</th>
                                <th></th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr ng-repeat="x in tempItems">
                                <th scope="row">&ensp;{{$index+1}}</th>
                                <td>{{ x.Nombre }}</td>
                                <td>{{ x.Cantidad }}</td>
                                <td><a href="#" ng-click="editItem('@Url.Action("UpdateCantidadComidasByDeporte")',x.Nombre,x.DeporteId)"><span class="glyphicon glyphicon-edit"></span></a></td>
                            </tr>
                            <tr ng-show="!tempItems.length">
                                <td></td>
                                <th colspan="3">No hay ningun Deporte</th>
                            </tr>
                        </tbody>
                    </table>
                    <div ng-hide="isHide">
                        <ul class="pagination pull-right">
                            <li ng-click="changePage(pages[0])">
                                <a href="#">
                                    <span>Primera</span>
                                </a>
                            </li>
                            <li ng-click="changePage(currentPage - 1)">
                                <a href="#">
                                    <span><<</span>
                                </a>
                            </li>
                            <li ng-repeat="x in tempPages" ng-click="changePage(x)" ng-class="{active: x == currentPage}">
                                <a href="#">
                                    <span>{{x}}</span>
                                </a>
                            </li>
                            <li ng-click="changePage(currentPage + 1)">
                                <a href="#">
                                    <span>>></span>
                                </a>
                            </li>
                            <li ng-click="changePage(pages[pages.length - 1])">
                                <a href="#">
                                    <span>Ultima</span>
                                </a>
                            </li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <br />
    <div class="row" ng-controller="listDependencias">
        <div class="col-md-10 col-sm-10">
            <h4>Asignacion grupal de comidas por Dependencia</h4>
            <hr />
            <p>Nombre de la dependencia</p>
            <div class="input-group" style="max-width:280px">
                <input type="text" class="form-control" placeholder="Buscar Deporte" ng-model="strDependencia">
                <span class="input-group-btn">
                    <button class="btn btn-default" type="button" ng-click="searchDependenciaByName(strDependencia)">Buscar</button>
                </span>
            </div>
            <br />
            <div class="panel panel-default">
                <div class="panel-heading">
                    Dependencias
                </div>
                <div class="panel-body">
                    Selecciona la depenencia
                </div>
                <div class="table-responsive">
                    <table class="table table-striped table-hover table-condensed">
                        <thead>
                            <tr>
                                <th>&ensp;#</th>
                                <th>Nombre</th>
                                <th>Cantidad</th>
                                <th></th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr ng-repeat="x in tempItems">
                                <th scope="row">&ensp;{{$index+1}}</th>
                                <td>{{ x.Nombre }}</td>
                                <td>{{ x.Cantidad }}</td>
                                <td><a href="#" ng-click="editItem('@Url.Action("UpdateCantidadComidasByDependencia")',x.Nombre,x.DependenciaId)"><span class="glyphicon glyphicon-edit"></span></a></td>
                            </tr>
                            <tr ng-show="!tempItems.length">
                                <td></td>
                                <th colspan="3">No hay ninguna dependencia</th>
                            </tr>
                        </tbody>
                    </table>
                    <div ng-hide="isHide">
                        <ul class="pagination pull-right">
                            <li ng-click="changePage(pages[0])">
                                <a href="#">
                                    <span>Primera</span>
                                </a>
                            </li>
                            <li ng-click="changePage(currentPage - 1)">
                                <a href="#">
                                    <span><<</span>
                                </a>
                            </li>
                            <li ng-repeat="x in tempPages" ng-click="changePage(x)" ng-class="{active: x == currentPage}">
                                <a href="#">
                                    <span>{{x}}</span>
                                </a>
                            </li>
                            <li ng-click="changePage(currentPage + 1)">
                                <a href="#">
                                    <span>>></span>
                                </a>
                            </li>
                            <li ng-click="changePage(pages[pages.length - 1])">
                                <a href="#">
                                    <span>Ultima</span>
                                </a>
                            </li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
@section scripts
{
    <script>
        function emptyString(str) {
            try {
                if (str.length < 1)
                    return true;
            } catch (e) {
                return true;
            }
            return false;
        }
        function jsPageing_(jsonUrl, numberOfItemsToShow, numberOfPagesToShow, controllerName) {
            var app = angular.module('listApp', []);

            app.directive('a', function () {
                return {
                    restrict: 'E',
                    link: function (scope, elem, attrs) {
                        if (attrs.ngClick || attrs.href === '' || attrs.href === '#') {
                            elem.on('click', function (e) {
                                e.preventDefault();
                            });
                        }
                    }
                };
            });

            app.controller('listDeportistas', function ($scope, $http, $filter) {

                //Pagination logic start
                //Inicialilzacion Start
                Validations();
                Initializer('[]');
                startPagination();
                //Inicialilzacion End

                function Initializer(_jsonObject) {
                    $scope.tempItems = [];
                    $scope.pages = [];
                    $scope.tempPages = [];
                    $scope.currentPage = 1;
                    $scope.items = $.parseJSON(_jsonObject);
                    for (var i = 0; i < Math.round(($scope.items.length / numberOfItemsToShow) + .4999) ; i++) {
                        $scope.pages.push(i + 1);
                    }
                    $scope.count = $scope.items.length;
                    $scope.isHide = numberOfItemsToShow >= $scope.items.length;
                }

                function Validations() {
                    var e = null;
                    if (numberOfPagesToShow > 17)
                        e = "The max value for 'numberOfPagesToShow' is 17";
                    else if (numberOfPagesToShow % 2 != 1)
                        e = "The 'numberOfPagesToShow' is not a impart number";
                    else if (numberOfItemsToShow <= 1)
                        e = "The min value for 'numberOfItemsToShow' is 2";
                    else if (numberOfPagesToShow < 3)
                        e = "The min value 'numberOfPagesToShow' is 3";
                    if (e != null)
                        throw e;
                }

                function setTempItems(start, end) {
                    if (!($scope.items.length < numberOfItemsToShow)) {
                        if ($scope.items.length < end && start != 0) {
                            end = start + (numberOfItemsToShow - (end - $scope.items.length));
                        }
                    } else {
                        start = 0;
                        end = $scope.items.length;
                    }
                    for (var i = start; i < end; i++) {
                        $scope.tempItems.push($scope.items[i]);
                    }
                }

                function startPagination() {
                    setTempItems(0, numberOfItemsToShow);
                    setTempPages(1);
                }

                function setTempPages(page) {
                    var pivot = Math.round(numberOfPagesToShow / 2);
                    var endPage = $scope.pages[$scope.pages.length - 1];
                    var first = 0;
                    var last = 0;

                    if (endPage < numberOfPagesToShow) {
                        first = 1;
                        last = endPage;
                    }
                    else if (page <= pivot) {
                        first = 1;
                        last = numberOfPagesToShow;
                    } else if (page > pivot && page <= (endPage - pivot)) {
                        first = (page - pivot) + 1;
                        last = (page + pivot) - 1;
                    } else if (page >= (endPage - pivot)) {
                        first = (endPage - numberOfPagesToShow) + 1;
                        last = endPage;
                    }
                    $scope.tempPages = [];
                    for (first; first <= last; first++) {
                        $scope.tempPages.push(first);
                    }
                }

                function showContentInModal(content) {
                    $("#idModal .modal-content").replaceWith('<div class="modal-content">' + content + '</div>');
                    $("#idModal").modal('show');
                }

                $scope.changePage = function (p) {
                    if (p <= 0 || p > $scope.pages.length)
                        return;
                    $scope.tempItems = [];
                    setTempItems(((numberOfItemsToShow * p) - numberOfItemsToShow), (numberOfItemsToShow * p));
                    setTempPages(p);
                    $scope.currentPage = p;
                }

                $scope.editItem = function (url, nombre, id) {
                    $http.get(url + '?nombre=' + nombre + '&id=' + id).success(function (r) {
                        showContentInModal(r);
                    });
                }

                $scope.searchDeportistaByStringExpression = function (str) {
                    searchMethods('AsignacionHorarios/GetDeportistaByStringExpression?expression=', str)
                }

                $scope.searchDeportistaByMatricula = function (str) {
                    searchMethods('AsignacionHorarios/GetDeportistaByMatricula?matricula=', str)
                }

                $scope.searchDeportistaByDeporteNombre = function (str) {
                    searchMethods('AsignacionHorarios/GetDeportistasByDeporteNombre?deporteName=', str);
                }

                $scope.searchDeportistaByDependenciaNombre = function (str) {
                    searchMethods('AsignacionHorarios/GetDeportistasByDepenenciaNombre?dependenciaNombre=', str);
                }

                function searchMethods(url, p) {
                    if (!emptyString(p))
                        $http.get(url + p).success(function (jsonObject) {
                            Initializer(jsonObject);
                            startPagination();
                            $scope.n = ($scope.notMore) ? 0 : $scope.n;
                        });
                }
            });

            app.controller('listDeportes', function ($scope, $http, $filter) {

                //Pagination logic start
                //Inicialilzacion Start
                Validations();
                Initializer('[]');
                startPagination();
                //Inicialilzacion End

                function Initializer(_jsonObject) {
                    $scope.tempItems = [];
                    $scope.pages = [];
                    $scope.tempPages = [];
                    $scope.currentPage = 1;
                    $scope.items = $.parseJSON(_jsonObject);
                    for (var i = 0; i < Math.round(($scope.items.length / numberOfItemsToShow) + .4999) ; i++) {
                        $scope.pages.push(i + 1);
                    }
                    $scope.count = $scope.items.length;
                    $scope.isHide = numberOfItemsToShow >= $scope.items.length;
                }

                function Validations() {
                    var e = null;
                    if (numberOfPagesToShow > 17)
                        e = "The max value for 'numberOfPagesToShow' is 17";
                    else if (numberOfPagesToShow % 2 != 1)
                        e = "The 'numberOfPagesToShow' is not a impart number";
                    else if (numberOfItemsToShow <= 1)
                        e = "The min value for 'numberOfItemsToShow' is 2";
                    else if (numberOfPagesToShow < 3)
                        e = "The min value 'numberOfPagesToShow' is 3";
                    if (e != null)
                        throw e;
                }

                function setTempItems(start, end) {
                    if (!($scope.items.length < numberOfItemsToShow)) {
                        if ($scope.items.length < end && start != 0) {
                            end = start + (numberOfItemsToShow - (end - $scope.items.length));
                        }
                    } else {
                        start = 0;
                        end = $scope.items.length;
                    }
                    for (var i = start; i < end; i++) {
                        $scope.tempItems.push($scope.items[i]);
                    }
                }

                function startPagination() {
                    setTempItems(0, numberOfItemsToShow);
                    setTempPages(1);
                }

                function setTempPages(page) {
                    var pivot = Math.round(numberOfPagesToShow / 2);
                    var endPage = $scope.pages[$scope.pages.length - 1];
                    var first = 0;
                    var last = 0;

                    if (endPage < numberOfPagesToShow) {
                        first = 1;
                        last = endPage;
                    }
                    else if (page <= pivot) {
                        first = 1;
                        last = numberOfPagesToShow;
                    } else if (page > pivot && page <= (endPage - pivot)) {
                        first = (page - pivot) + 1;
                        last = (page + pivot) - 1;
                    } else if (page >= (endPage - pivot)) {
                        first = (endPage - numberOfPagesToShow) + 1;
                        last = endPage;
                    }
                    $scope.tempPages = [];
                    for (first; first <= last; first++) {
                        $scope.tempPages.push(first);
                    }
                }

                function showContentInModal(content) {
                    $("#idModal .modal-content").replaceWith('<div class="modal-content">' + content + '</div>');
                    $("#idModal").modal('show');
                }

                $scope.changePage = function (p) {
                    if (p <= 0 || p > $scope.pages.length)
                        return;
                    $scope.tempItems = [];
                    setTempItems(((numberOfItemsToShow * p) - numberOfItemsToShow), (numberOfItemsToShow * p));
                    setTempPages(p);

                    $scope.currentPage = p;
                }

                $scope.editItem = function (url, nombre, id) {
                    $http.get(url + '?nombre=' + nombre + '&id=' + id).success(function (r) {
                        showContentInModal(r);
                    });
                }

                $scope.searchDeporteByName = function (str) {
                    if (!emptyString(str))
                        $http.get('AsignacionHorarios/GetDeportesByNombre?deporte=' + str).success(function (jsonObject) {
                            Initializer(jsonObject);
                            startPagination();
                            $scope.n = ($scope.notMore) ? 0 : $scope.n;
                        });
                }

            });

            app.controller('listDependencias', function ($scope, $http, $filter) {

                //Pagination logic start
                //Inicialilzacion Start
                Validations();
                Initializer('[]');
                startPagination();
                //Inicialilzacion End

                function Initializer(_jsonObject) {
                    $scope.tempItems = [];
                    $scope.pages = [];
                    $scope.tempPages = [];
                    $scope.currentPage = 1;
                    $scope.items = $.parseJSON(_jsonObject);
                    for (var i = 0; i < Math.round(($scope.items.length / numberOfItemsToShow) + .4999) ; i++) {
                        $scope.pages.push(i + 1);
                    }
                    $scope.count = $scope.items.length;
                    $scope.isHide = numberOfItemsToShow >= $scope.items.length;
                }

                function Validations() {
                    var e = null;
                    if (numberOfPagesToShow > 17)
                        e = "The max value for 'numberOfPagesToShow' is 17";
                    else if (numberOfPagesToShow % 2 != 1)
                        e = "The 'numberOfPagesToShow' is not a impart number";
                    else if (numberOfItemsToShow <= 1)
                        e = "The min value for 'numberOfItemsToShow' is 2";
                    else if (numberOfPagesToShow < 3)
                        e = "The min value 'numberOfPagesToShow' is 3";
                    if (e != null)
                        throw e;
                }

                function setTempItems(start, end) {
                    if (!($scope.items.length < numberOfItemsToShow)) {
                        if ($scope.items.length < end && start != 0) {
                            end = start + (numberOfItemsToShow - (end - $scope.items.length));
                        }
                    } else {
                        start = 0;
                        end = $scope.items.length;
                    }
                    for (var i = start; i < end; i++) {
                        $scope.tempItems.push($scope.items[i]);
                    }
                }

                function startPagination() {
                    setTempItems(0, numberOfItemsToShow);
                    setTempPages(1);
                }

                function setTempPages(page) {
                    var pivot = Math.round(numberOfPagesToShow / 2);
                    var endPage = $scope.pages[$scope.pages.length - 1];
                    var first = 0;
                    var last = 0;

                    if (endPage < numberOfPagesToShow) {
                        first = 1;
                        last = endPage;
                    }
                    else if (page <= pivot) {
                        first = 1;
                        last = numberOfPagesToShow;
                    } else if (page > pivot && page <= (endPage - pivot)) {
                        first = (page - pivot) + 1;
                        last = (page + pivot) - 1;
                    } else if (page >= (endPage - pivot)) {
                        first = (endPage - numberOfPagesToShow) + 1;
                        last = endPage;
                    }
                    $scope.tempPages = [];
                    for (first; first <= last; first++) {
                        $scope.tempPages.push(first);
                    }
                }

                function showContentInModal(content) {
                    $("#idModal .modal-content").replaceWith('<div class="modal-content">' + content + '</div>');
                    $("#idModal").modal('show');
                }

                $scope.changePage = function (p) {
                    if (p <= 0 || p > $scope.pages.length)
                        return;
                    $scope.tempItems = [];
                    setTempItems(((numberOfItemsToShow * p) - numberOfItemsToShow), (numberOfItemsToShow * p));
                    setTempPages(p);

                    $scope.currentPage = p;
                }

                $scope.editItem = function (url, nombre, id) {
                    $http.get(url + '?nombre=' + nombre + '&id=' + id).success(function (r) {
                        showContentInModal(r);
                    });
                }

                $scope.searchDependenciaByName = function (str) {
                    if (!emptyString(str))
                        $http.get('AsignacionHorarios/GetDependenciasByNombre?dependencia=' + str).success(function (jsonObject) {
                            Initializer(jsonObject);
                            startPagination();
                            $scope.n = ($scope.notMore) ? 0 : $scope.n;
                        });
                }

            });
        }
        var controller = jsPageing_("@Url.Action("GetDeportista")", 10, 9, "listDeportistas");
    </script>
}